  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 ////////////////////////////////////////////////// GAME START /////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var canvas = document.getElementById('game');
var context = canvas.getContext('2d');



function rand(min,max){
    return (Math.random() * max) + min
}



var Envo = {
    Time: "Day",
    Wave: 0,
    Weather: 0,
}

var Plr = {
    x: -150,
    y: -150,

    yv:0,
    xv:0,

    xxv:0,
    yyv:0,
}

var inputs = {
    w: false,
    a: false,
    s: false,
    d: false,

    x:0,
    y:0,
}


var enemies = []

for (var balls=0;balls<100;balls++){
    enemies.push([Math.random() * 10000, Math.random() * 10000, 0])
}


var MAPX = 40
var MAPY = 40
var Map = [
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,1,1,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,1,1,0,0,2,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,1],
    [1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
]

//SPRITES


document.addEventListener('keydown', function(e) {
    if (e.which === 65 ) {
        inputs.a=true

    }
    else if (e.which === 68 ) {
        inputs.d=true

    }
    else if (e.which === 87 ) {
        inputs.w=true

    }
    else if (e.which === 83 ) {
        inputs.s=true

    }
})
document.addEventListener('keyup', function(e) {
    if (e.which === 65 ) {
        inputs.a=false
    }
    else if (e.which === 68 ) {
        inputs.d=false
    }
    else if (e.which === 87 ) {
        inputs.w=false
    }
    else if (e.which === 83 ) {
        inputs.s=false
    }
})

document.addEventListener('mousemove', function(e) {
    inputs.x = e.clientX
    inputs.y = e.clientY
})

var angle = 0

var time = 0

function loop() { 
    context.clearRect(0,0,1000,1000)
    context.fillStyle = `rgb(7,7,14)`
    context.fillRect(0,0,2000,2000)
    
    time += .1


    let mapu1 = []
    for(x=0;x<MAPX;x++){
        for(y=0;y<MAPY;y++){

            if(Map[y][x] == 0){
                context.fillStyle = `rgb(25,25,30)`
            }
            else if(Map[y][x] == 2){
                context.fillStyle = `rgb(55,55,155)`
            }

            else{
                mapu1.push([x,y])
                context.fillStyle = `rgb(155,55,55)`
            }
            context.fillRect(x*75+Plr.x,y*75+Plr.y,66,66)

        } 
    }

    for (let height = 0; height < 15; height++){
        for (ind = 0; ind<mapu1.length;ind++){
            const nH = 1+(height/90)
            context.fillStyle = `rgb(${155/nH},${55/nH},${55/nH})`
            context.fillRect((mapu1[ind][0]*75 + Plr.x)*nH - (height*5.4) ,(mapu1[ind][1]*75 + Plr.y)*nH - (height*5.4) ,70,70)
        }
    }

    context.fillRect(500-(Plr.xv/3),500-(Plr.yv/3),15,15)

    for(var en = 0; en < enemies.length;en++){
        context.fillStyle = `rgb(0,0,255)`
        context.fillRect(Plr.x+enemies[en][0],Plr.y+enemies[en][1],19,19)
        enemies[en][2] = Math.atan((Plr.x+enemies[en][0])/(Plr.y+enemies[en][1]))
        enemies[en][0] += Math.sin(enemies[en][0])
        enemies[en][1] += Math.cos(enemies[en][0])
    }

    context.fillStyle = `rgb(255,125,125)`

    if (inputs.a==true){
        Plr.xv -= 2
    }

    if (inputs.d==true){
        Plr.xv += 2
    }


    if (inputs.w==true){
        Plr.yv -= 2
    }

    if (inputs.s==true){
        Plr.yv += 2
    }
 
    if(inputs.a==false && inputs.d==false){
        Plr.xv *= .8
    }
    if(inputs.w==false && inputs.s==false){
        Plr.yv *= .8
    }
   
    if (Math.abs(Plr.xv) > 16){
        Plr.xv = 16 * (Math.abs(Plr.xv)/Plr.xv)
    }
    if (Math.abs(Plr.yv) > 16){
        Plr.yv = 16 * (Math.abs(Plr.yv)/Plr.yv)
    }
  

    Plr.x -= Plr.xv
    if(Map[40 - (Math.floor(Plr.y/75)+34)][40 - (Math.floor(Plr.x/75)+34)]==1){
        Plr.x += Plr.xv
        Plr.xv = 0
    }

    Plr.y -= Plr.yv
    if(Map[40 - (Math.floor(Plr.y/75)+34)][40 - (Math.floor(Plr.x/75)+34)]==1){
        Plr.y += Plr.yv
        Plr.yv = 0
    }




    context.fillStyle = `rgb(125,125,125)`
    
    context.fillRect(435+inputs.x/15,470+inputs.y/15,11,11)


    context.fillStyle = `rgb(255,0,0)`



    requestAnimationFrame(loop);

};




// start the game
requestAnimationFrame(loop) 
